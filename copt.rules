#
#	jmp & bra
#

	jmp %1
%1:
=
%1:


	jmp %1
%2:
%1:
=
%2:
%1:


	jmp %1
%3:
%2:
%1:
=
%3:
%2:
%1:


	jmp L%1
	jmp L%2
=
	jmp L%1

#
#
#

	bra %1
%1:
=
%1:


	bra %2
%1:
%2:
=
%1:
%2:


	bra L%1
	bra L%2
=
	bra L%1

#
#
#

	ldx #%1
	ldx 0,x
=
	ldx %1

#
#
#
	ldab 0,x
	tstb
=
	ldab 0,x


	clra
	aba
	adca #0
=
	tstb


	addb #<%1
	adca #>%1
	addb #<%2
	adca #>%2
=
	addb #<%1+%2
	adca #>%1+%2


	ldab #<%1
	ldaa #>%1
	addb #<%2
	adca #>%2
=
	ldab #<%1+%2
	ldaa #>%1+%2


	ldab #<%1
	ldaa #>%1
	jsr __load16
=
	ldab %1+1
	ldaa %1


	ldab #<%1
	ldaa #>%1
	stab @tmp1+1
	staa @tmp1
	ldx @tmp1
=
	ldx #%1

# long

	jsr __u16to32
	ldab @long+3
	pshb
	ldab @long+2
	pshb
	ldab @long+1
	pshb
	ldab @long
	pshb
=
	pshb
	psha
	clrb
	pshb
	pshb

	ldab 3,x
	stab @long+3
	ldab 2,x
	stab @long+2
	ldab 1,x
	stab @long+1
	ldab 0,x
	stab @long
	ldab @long+3
	pshb
	ldab @long+2
	pshb
	ldab @long+1
	pshb
	ldab @long
	pshb
=
	ldab 3,x
	pshb
	ldab 2,x
	pshb
	ldab 1,x
	pshb
	ldab 0,x
	pshb


	ldab @bp+1
	ldaa @bp
	pshb
	psha
	ldab %4,x
	ldaa %3,x
	aslb
	rola
	tsx
	addb 1,x
	adca 0,x
	ins
	ins
=
	ldab %4,x
	ldaa %3,x
	aslb
	rola
	addb @bp+1
	adca @bp

	jsr __load8u	; AccB = (AccAB)
	tstb
=
	jsr __load8u

#
#	-Os fusion
#
	jsr __load32x
	jsr __push32
=
	jsr __load32x_push

